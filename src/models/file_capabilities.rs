/*
 * Drive API
 *
 * Manages files in Drive including uploading, downloading, searching, detecting changes, and updating sharing permissions.
 *
 * The version of the OpenAPI document: v3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// FileCapabilities : Capabilities the current user has on this file. Each capability corresponds to a fine-grained action that a user may take.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct FileCapabilities {
    /// Whether the current user can add children to this folder. This is always false when the item is not a folder.
    #[serde(rename = "canAddChildren", skip_serializing_if = "Option::is_none")]
    pub can_add_children: Option<bool>,
    /// Whether the current user can add a folder from another drive (different shared drive or My Drive) to this folder. This is false when the item is not a folder. Only populated for items in shared drives.
    #[serde(rename = "canAddFolderFromAnotherDrive", skip_serializing_if = "Option::is_none")]
    pub can_add_folder_from_another_drive: Option<bool>,
    /// Whether the current user can add a parent for the item without removing an existing parent in the same request. Not populated for shared drive files.
    #[serde(rename = "canAddMyDriveParent", skip_serializing_if = "Option::is_none")]
    pub can_add_my_drive_parent: Option<bool>,
    /// Whether the current user can change the copyRequiresWriterPermission restriction of this file.
    #[serde(rename = "canChangeCopyRequiresWriterPermission", skip_serializing_if = "Option::is_none")]
    pub can_change_copy_requires_writer_permission: Option<bool>,
    /// Whether the current user can change the securityUpdateEnabled field on link share metadata.
    #[serde(rename = "canChangeSecurityUpdateEnabled", skip_serializing_if = "Option::is_none")]
    pub can_change_security_update_enabled: Option<bool>,
    /// Deprecated
    #[serde(rename = "canChangeViewersCanCopyContent", skip_serializing_if = "Option::is_none")]
    pub can_change_viewers_can_copy_content: Option<bool>,
    /// Whether the current user can comment on this file.
    #[serde(rename = "canComment", skip_serializing_if = "Option::is_none")]
    pub can_comment: Option<bool>,
    /// Whether the current user can copy this file. For an item in a shared drive, whether the current user can copy non-folder descendants of this item, or this item itself if it is not a folder.
    #[serde(rename = "canCopy", skip_serializing_if = "Option::is_none")]
    pub can_copy: Option<bool>,
    /// Whether the current user can delete this file.
    #[serde(rename = "canDelete", skip_serializing_if = "Option::is_none")]
    pub can_delete: Option<bool>,
    /// Whether the current user can delete children of this folder. This is false when the item is not a folder. Only populated for items in shared drives.
    #[serde(rename = "canDeleteChildren", skip_serializing_if = "Option::is_none")]
    pub can_delete_children: Option<bool>,
    /// Whether the current user can download this file.
    #[serde(rename = "canDownload", skip_serializing_if = "Option::is_none")]
    pub can_download: Option<bool>,
    /// Whether the current user can edit this file. Other factors may limit the type of changes a user can make to a file. For example, see canChangeCopyRequiresWriterPermission or canModifyContent.
    #[serde(rename = "canEdit", skip_serializing_if = "Option::is_none")]
    pub can_edit: Option<bool>,
    /// Whether the current user can list the children of this folder. This is always false when the item is not a folder.
    #[serde(rename = "canListChildren", skip_serializing_if = "Option::is_none")]
    pub can_list_children: Option<bool>,
    /// Whether the current user can modify the content of this file.
    #[serde(rename = "canModifyContent", skip_serializing_if = "Option::is_none")]
    pub can_modify_content: Option<bool>,
    /// Whether the current user can modify restrictions on content of this file.
    #[serde(rename = "canModifyContentRestriction", skip_serializing_if = "Option::is_none")]
    pub can_modify_content_restriction: Option<bool>,
    /// Whether the current user can move children of this folder outside of the shared drive. This is false when the item is not a folder. Only populated for items in shared drives.
    #[serde(rename = "canMoveChildrenOutOfDrive", skip_serializing_if = "Option::is_none")]
    pub can_move_children_out_of_drive: Option<bool>,
    /// Deprecated - use canMoveChildrenOutOfDrive instead.
    #[serde(rename = "canMoveChildrenOutOfTeamDrive", skip_serializing_if = "Option::is_none")]
    pub can_move_children_out_of_team_drive: Option<bool>,
    /// Whether the current user can move children of this folder within this drive. This is false when the item is not a folder. Note that a request to move the child may still fail depending on the current user's access to the child and to the destination folder.
    #[serde(rename = "canMoveChildrenWithinDrive", skip_serializing_if = "Option::is_none")]
    pub can_move_children_within_drive: Option<bool>,
    /// Deprecated - use canMoveChildrenWithinDrive instead.
    #[serde(rename = "canMoveChildrenWithinTeamDrive", skip_serializing_if = "Option::is_none")]
    pub can_move_children_within_team_drive: Option<bool>,
    /// Deprecated - use canMoveItemOutOfDrive instead.
    #[serde(rename = "canMoveItemIntoTeamDrive", skip_serializing_if = "Option::is_none")]
    pub can_move_item_into_team_drive: Option<bool>,
    /// Whether the current user can move this item outside of this drive by changing its parent. Note that a request to change the parent of the item may still fail depending on the new parent that is being added.
    #[serde(rename = "canMoveItemOutOfDrive", skip_serializing_if = "Option::is_none")]
    pub can_move_item_out_of_drive: Option<bool>,
    /// Deprecated - use canMoveItemOutOfDrive instead.
    #[serde(rename = "canMoveItemOutOfTeamDrive", skip_serializing_if = "Option::is_none")]
    pub can_move_item_out_of_team_drive: Option<bool>,
    /// Whether the current user can move this item within this drive. Note that a request to change the parent of the item may still fail depending on the new parent that is being added and the parent that is being removed.
    #[serde(rename = "canMoveItemWithinDrive", skip_serializing_if = "Option::is_none")]
    pub can_move_item_within_drive: Option<bool>,
    /// Deprecated - use canMoveItemWithinDrive instead.
    #[serde(rename = "canMoveItemWithinTeamDrive", skip_serializing_if = "Option::is_none")]
    pub can_move_item_within_team_drive: Option<bool>,
    /// Deprecated - use canMoveItemWithinDrive or canMoveItemOutOfDrive instead.
    #[serde(rename = "canMoveTeamDriveItem", skip_serializing_if = "Option::is_none")]
    pub can_move_team_drive_item: Option<bool>,
    /// Whether the current user can read the shared drive to which this file belongs. Only populated for items in shared drives.
    #[serde(rename = "canReadDrive", skip_serializing_if = "Option::is_none")]
    pub can_read_drive: Option<bool>,
    /// Whether the current user can read the revisions resource of this file. For a shared drive item, whether revisions of non-folder descendants of this item, or this item itself if it is not a folder, can be read.
    #[serde(rename = "canReadRevisions", skip_serializing_if = "Option::is_none")]
    pub can_read_revisions: Option<bool>,
    /// Deprecated - use canReadDrive instead.
    #[serde(rename = "canReadTeamDrive", skip_serializing_if = "Option::is_none")]
    pub can_read_team_drive: Option<bool>,
    /// Whether the current user can remove children from this folder. This is always false when the item is not a folder. For a folder in a shared drive, use canDeleteChildren or canTrashChildren instead.
    #[serde(rename = "canRemoveChildren", skip_serializing_if = "Option::is_none")]
    pub can_remove_children: Option<bool>,
    /// Whether the current user can remove a parent from the item without adding another parent in the same request. Not populated for shared drive files.
    #[serde(rename = "canRemoveMyDriveParent", skip_serializing_if = "Option::is_none")]
    pub can_remove_my_drive_parent: Option<bool>,
    /// Whether the current user can rename this file.
    #[serde(rename = "canRename", skip_serializing_if = "Option::is_none")]
    pub can_rename: Option<bool>,
    /// Whether the current user can modify the sharing settings for this file.
    #[serde(rename = "canShare", skip_serializing_if = "Option::is_none")]
    pub can_share: Option<bool>,
    /// Whether the current user can move this file to trash.
    #[serde(rename = "canTrash", skip_serializing_if = "Option::is_none")]
    pub can_trash: Option<bool>,
    /// Whether the current user can trash children of this folder. This is false when the item is not a folder. Only populated for items in shared drives.
    #[serde(rename = "canTrashChildren", skip_serializing_if = "Option::is_none")]
    pub can_trash_children: Option<bool>,
    /// Whether the current user can restore this file from trash.
    #[serde(rename = "canUntrash", skip_serializing_if = "Option::is_none")]
    pub can_untrash: Option<bool>,
}

impl FileCapabilities {
    /// Capabilities the current user has on this file. Each capability corresponds to a fine-grained action that a user may take.
    pub fn new() -> FileCapabilities {
        FileCapabilities {
            can_add_children: None,
            can_add_folder_from_another_drive: None,
            can_add_my_drive_parent: None,
            can_change_copy_requires_writer_permission: None,
            can_change_security_update_enabled: None,
            can_change_viewers_can_copy_content: None,
            can_comment: None,
            can_copy: None,
            can_delete: None,
            can_delete_children: None,
            can_download: None,
            can_edit: None,
            can_list_children: None,
            can_modify_content: None,
            can_modify_content_restriction: None,
            can_move_children_out_of_drive: None,
            can_move_children_out_of_team_drive: None,
            can_move_children_within_drive: None,
            can_move_children_within_team_drive: None,
            can_move_item_into_team_drive: None,
            can_move_item_out_of_drive: None,
            can_move_item_out_of_team_drive: None,
            can_move_item_within_drive: None,
            can_move_item_within_team_drive: None,
            can_move_team_drive_item: None,
            can_read_drive: None,
            can_read_revisions: None,
            can_read_team_drive: None,
            can_remove_children: None,
            can_remove_my_drive_parent: None,
            can_rename: None,
            can_share: None,
            can_trash: None,
            can_trash_children: None,
            can_untrash: None,
        }
    }
}


