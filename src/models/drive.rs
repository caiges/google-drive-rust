/*
 * Drive API
 *
 * Manages files in Drive including uploading, downloading, searching, detecting changes, and updating sharing permissions.
 *
 * The version of the OpenAPI document: v3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Drive : Representation of a shared drive.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Drive {
    #[serde(rename = "backgroundImageFile", skip_serializing_if = "Option::is_none")]
    pub background_image_file: Option<Box<crate::models::DriveBackgroundImageFile>>,
    /// A short-lived link to this shared drive's background image.
    #[serde(rename = "backgroundImageLink", skip_serializing_if = "Option::is_none")]
    pub background_image_link: Option<String>,
    #[serde(rename = "capabilities", skip_serializing_if = "Option::is_none")]
    pub capabilities: Option<Box<crate::models::DriveCapabilities>>,
    /// The color of this shared drive as an RGB hex string. It can only be set on a drive.drives.update request that does not set themeId.
    #[serde(rename = "colorRgb", skip_serializing_if = "Option::is_none")]
    pub color_rgb: Option<String>,
    /// The time at which the shared drive was created (RFC 3339 date-time).
    #[serde(rename = "createdTime", skip_serializing_if = "Option::is_none")]
    pub created_time: Option<String>,
    /// Whether the shared drive is hidden from default view.
    #[serde(rename = "hidden", skip_serializing_if = "Option::is_none")]
    pub hidden: Option<bool>,
    /// The ID of this shared drive which is also the ID of the top level folder of this shared drive.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Identifies what kind of resource this is. Value: the fixed string \"drive#drive\".
    #[serde(rename = "kind", skip_serializing_if = "Option::is_none")]
    pub kind: Option<String>,
    /// The name of this shared drive.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "restrictions", skip_serializing_if = "Option::is_none")]
    pub restrictions: Option<Box<crate::models::DriveRestrictions>>,
    /// The ID of the theme from which the background image and color will be set. The set of possible driveThemes can be retrieved from a drive.about.get response. When not specified on a drive.drives.create request, a random theme is chosen from which the background image and color are set. This is a write-only field; it can only be set on requests that don't set colorRgb or backgroundImageFile.
    #[serde(rename = "themeId", skip_serializing_if = "Option::is_none")]
    pub theme_id: Option<String>,
}

impl Drive {
    /// Representation of a shared drive.
    pub fn new() -> Drive {
        Drive {
            background_image_file: None,
            background_image_link: None,
            capabilities: None,
            color_rgb: None,
            created_time: None,
            hidden: None,
            id: None,
            kind: None,
            name: None,
            restrictions: None,
            theme_id: None,
        }
    }
}


