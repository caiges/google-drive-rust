/*
 * Drive API
 *
 * Manages files in Drive including uploading, downloading, searching, detecting changes, and updating sharing permissions.
 *
 * The version of the OpenAPI document: v3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ChangeList : A list of changes for a user.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ChangeList {
    /// The list of changes. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.
    #[serde(rename = "changes", skip_serializing_if = "Option::is_none")]
    pub changes: Option<Vec<crate::models::Change>>,
    /// Identifies what kind of resource this is. Value: the fixed string \"drive#changeList\".
    #[serde(rename = "kind", skip_serializing_if = "Option::is_none")]
    pub kind: Option<String>,
    /// The starting page token for future changes. This will be present only if the end of the current changes list has been reached.
    #[serde(rename = "newStartPageToken", skip_serializing_if = "Option::is_none")]
    pub new_start_page_token: Option<String>,
    /// The page token for the next page of changes. This will be absent if the end of the changes list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.
    #[serde(rename = "nextPageToken", skip_serializing_if = "Option::is_none")]
    pub next_page_token: Option<String>,
}

impl ChangeList {
    /// A list of changes for a user.
    pub fn new() -> ChangeList {
        ChangeList {
            changes: None,
            kind: None,
            new_start_page_token: None,
            next_page_token: None,
        }
    }
}


